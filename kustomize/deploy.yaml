apiVersion: storage.k8s.io/v1beta1
kind: CSIDriver
metadata:
  name: direct.csi.driver.min.io
  namespace: direct-csi-driver
spec:
  volumeLifecycleModes:
  - Persistent
  - Ephemeral
  podInfoOnMount: false
  attachRequired: false
---

apiVersion: v1
kind: Secret
metadata:
  name: direct-csi-driver-min-io
  namespace: direct-csi-driver
data:
  key: none

---

apiVersion: storage.k8s.io/v1beta1
kind: StorageClass
metadata:
  name: direct.csi.driver.min.io
provisioner: direct.csi.driver.min.io
parameters:
  disable.csi.storage.k8s.io/provisioner-secret-name: direct-csi-driver-min-io
  disable.csi.storage.k8s.io/provisioner-secret-namespace: default
  disable.csi.storage.k8s.io/fstype: xfs

---

kind: Service
apiVersion: v1
metadata:
  name: direct-csi-driver-min-io
  namespace: direct-csi-driver
  labels:
    app: direct-csi-driver-min-io
spec:
  selector:
    app: direct-csi-driver-min-io
  ports:
    - name: unused
      port: 12345

---

kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: direct-csi-driver-min-io
  namespace: direct-csi-driver
spec:
  selector:
    matchLabels:
      app: direct-csi-driver-min-io
  template:
    metadata:
      labels:
        app: direct-csi-driver-min-io
    spec:
      serviceAccountName: direct-csi-driver-min-io
      containers:
        - name: node-driver-registrar
          image: quay.io/k8scsi/csi-node-driver-registrar:v1.3.0
          args:
            - --v=5
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path=/var/lib/kubelet/plugins/direct-csi-driver-min-io/csi.sock
          securityContext:
            # This is necessary only for systems with SELinux, where
            # non-privileged sidecar containers cannot access unix domain socket
            # created by privileged CSI driver container.
            privileged: true
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /registration
            name: registration-dir
          - mountPath: $(COMMON_CONTAINER_ROOT)
            name: direct-csi-driver-common-root
          terminationMessagePolicy: FallbackToLogsOnError
          terminationMessagePath: $(COMMON_CONTAINER_ROOT)/driver-registrar-termination-log
        - name: direct-csi-driver
          image: $(REPOSITORY_ORG)/$(REPOSITORY_IMAGE):$(VERSION)
          args:
            - "--identity=direct.csi.driver.min.io"
            - "--v=5"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--node-id=$(KUBE_NODE_NAME)"
            - $(DRIVE_PATHS)
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          terminationMessagePath: $(COMMON_CONTAINER_ROOT)/driver-termination-log
          ports:
          - containerPort: 9898
            name: healthz
            protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
              name: mountpoint-dir
            - mountPath: /var/lib/kubelet/plugins
              mountPropagation: Bidirectional
              name: plugins-dir
            - mountPath: $(COMMON_CONTAINER_ROOT)
              name: direct-csi-driver-common-root
            - mountPath: /dev
              name: dev-dir
        - name: liveness-probe
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: $(COMMON_CONTAINER_ROOT)
            name: direct-csi-driver-common-root
          image: quay.io/k8scsi/livenessprobe:v1.1.0
          args:
          - --csi-address=/csi/csi.sock
          - --health-port=9898
          terminationMessagePolicy: FallbackToLogsOnError
          terminationMessagePath: $(COMMON_CONTAINER_ROOT)/driver-liveness-termination-log
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/direct-csi-driver-min-io
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins
            type: Directory
          name: plugins-dir
        - hostPath:
            path: $(COMMON_HOST_ROOT)
            type: DirectoryOrCreate
          name: direct-csi-driver-common-root
        - hostPath:
            path: /dev
            type: Directory
          name: dev-dir

---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: direct-csi-controller-min-io
  namespace: direct-csi-driver
spec:
  replicas: 3
  selector:
    matchLabels:
      app: direct-csi-controller-min-io
  template:
    metadata:
      labels:
        app: direct-csi-controller-min-io
    spec:
      serviceAccountName: direct-csi-driver-min-io
      containers:
        - name: csi-provisioner
          image: quay.io/k8scsi/csi-provisioner:v1.2.1
          args:
            - "--v=5"
            - "--timeout=300s"
            - "--csi-address=$(CSI_ENDPOINT)"
            - "--enable-leader-election"
            - "--leader-election-type=leases"
            - "--feature-gates=Topology=true"
            - "--strict-topology"
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /dev
              name: dev-dir
            - mountPath: $(COMMON_CONTAINER_ROOT)
              name: direct-csi-driver-common-root
          terminationMessagePolicy: FallbackToLogsOnError
          terminationMessagePath: $(COMMON_CONTAINER_ROOT)/controller-provisioner-termination-log
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
        - name: direct-csi-controller
          image: $(REPOSITORY_ORG)/$(REPOSITORY_IMAGE):$(VERSION)
          args:
            - "--v=5"
            - "--identity=direct.csi.driver.min.io"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--node-id=$(KUBE_NODE_NAME)"
            - "/tmp/"
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          securityContext:
            # This is necessary only for systems with SELinux, where
            # non-privileged sidecar containers cannot access unix domain socket
            # created by privileged CSI driver container.
            privileged: true
          ports:
          - containerPort: 9898
            name: healthz
            protocol: TCP
          terminationMessagePolicy: FallbackToLogsOnError
          terminationMessagePath: $(COMMON_CONTAINER_ROOT)/controller-termination-log
          volumeMounts:
            - mountPath: /dev
              name: dev-dir
            - mountPath: /csi
              name: socket-dir
            - mountPath: $(COMMON_CONTAINER_ROOT)
              name: direct-csi-driver-common-root
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/direct-csi-controller-min-io
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /dev
            type: Directory
          name: dev-dir
        - hostPath:
            path: $(COMMON_HOST_ROOT)
            type: DirectoryOrCreate
          name: direct-csi-driver-common-root
